(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1086:function(n,s){n.exports={content:["article",["p",["a",{title:null,href:"https://umijs.org/"},"umi"]," 脚手架为 ",["a",{title:null,href:"https://ant.design"},"ant design"]," 提供的可插拔的企业级 react 应用框架，具体教程",["a",{title:null,href:"https://www.youtube.com/watch?v=vkAUGUlYm24&feature=youtu.be"},"请查看"],"。"],["p","使用 demo 地址请查看 ",["a",{title:null,href:"https://github.com/ant-motion/landing-umi-example"},"umi-example"],";"],["h2","文件路径"],["p","创建文件我们分三步来完成："],["ul",["li",["p","首先我们创建一个文件目录，在文件夹里创建一个 ",["code","src"]," 文件夹；"]],["li",["p","使用 umi 的 ",["code","umi generate page index"]," 创建一个 ",["code","index"]," 页；"]],["li",["p","我们将从 ",["code","landing"]," 上下载的 ",["code","Home"]," 文件包和 ",["code","pages"]," 放至 ",["code","src"]," 文件包里；"]]],["pre",{lang:null,highlighted:'│── src\n│ │── Home \n│    │── less\n│    │── index<span class="token punctuation">.</span>js\n│    └── <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n│ └── pages     \n│    │── index<span class="token punctuation">.</span>js\n│    │── index<span class="token punctuation">.</span>less'},["code","│── src\n│ │── Home \n│    │── less\n│    │── index.js\n│    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less"]],["h2","安装依赖"],["p","安装 ",["code","react"]," 和 ",["code","react-dom"],", ",["code","npm install react react-dom --save"],";"],["p","详细参考",["a",{title:null,href:"docs/use/getting-started#安装依赖"},"开始使用里的安装依赖"],";"],["p","这里我们还需要安装 ",["code","npm install umi-plugin-react --save-dev"],", 再创建 ",["code",".umirc.js"]," 在根目录里, 现在目录结构为："],["pre",{lang:null,highlighted:'│── node_modules\n│  └── <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n│── src\n│  └── <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n└── <span class="token punctuation">.</span>umirc<span class="token punctuation">.</span>js'},["code","│── node_modules\n│  └── ...\n│── src\n│  └── ...\n└── .umirc.js"]],["h3","antd import 插件;"],["h4","3.0 只需要安装 ",["code","@umijs/preset-react"]," 即可；"],["p",["code","npm i @umijs/preset-react --save-dev"],";"],["h4","2.0 添加 ",["code","umi-plugin-react"],";"],["p","先安装插件 ",["code","npm i umi-plugin-react --save-dev"],", 再在 ",["code",".umirc.js"]," 里添加 ",["code","plugins"]," 即可："],["pre",{lang:"js",highlighted:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'umi-plugin-react\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        antd<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","export default {\n  plugins: [\n    [\n      'umi-plugin-react', {\n        antd: true,\n      },\n    ],\n  ],\n};"]],["h2","修改入口文件"],["p","更改刚才创建的 ",["code","index"]," 页面，打开 ",["code","index.js"],"，引入 ",["code","Home"]," 文件包并渲染。"],["pre",{lang:"jsx",highlighted:'<span class="token operator">-</span> <span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./index.css\'</span><span class="token punctuation">;</span>\n<span class="token operator">+</span> <span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">\'../Home\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n<span class="token operator">-</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>normal<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n<span class="token operator">-</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Page index<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n<span class="token operator">-</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token operator">+</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Home</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","- import styles from './index.css';\n+ import Home from '../Home';\n\nexport default function() {\n  return (\n-   <div className={styles.normal}>\n-     <h1>Page index</h1>\n-   </div>\n+   <Home />\n  );\n}"]],["h2","CSS Modules"],["h3","3.0 将自动识别 css modules;"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> style <span class="token keyword">from</span> <span class="token string">\'xxx.less\'</span> <span class="token operator">=</span><span class="token operator">></span> 使用 css modules<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">\'xxx.less\'</span> <span class="token operator">=</span><span class="token operator">></span> 不使用 css modules<span class="token punctuation">;</span>'},["code","import style from 'xxx.less' => 使用 css modules;\n\nimport 'xxx.less' => 不使用 css modules;"]],["h3","2.0 使用以下方法"],["p","umi 同样使用了 ",["code","css-modules"],", 同样我们提供了以下几种解决方案。"],["h4","在全局样式里引用"],["p","在 ",["code","src"]," 里新建一个 ",["code","global.less"],"; 在 ",["code","global.less"]," 里引入 ",["code","Home"]," 样式: "],["pre",{lang:"less",highlighted:'<span class="token variable">@import</span> <span class="token string">\'./Home/less/antMotionStyle.less\'</span><span class="token punctuation">;</span>'},["code","@import './Home/less/antMotionStyle.less';"]],["p","如果选择这个方案，我们需要删除 ",["code","Home"]," 的 ",["code","index.jsx"]," 里的 ",["code","import './less/antMotionStyle.less';"]],["h4","使用 css-module 的 global"],["p","使用 ",["code","css-modules"]," 的 ",["code","global"],", 在 ",["code","index.less"]," 里添加 ",["code",":global"],", 将样式不作转换, ",["code","global"]," 具体使用",["a",{title:null,href:"/docs/use/getting-started#样式"},"请查看开始使用"],"。"],["h4","关闭 css-modules"],["p","如果你当前项目为新项目，且对 ",["code","css-modules"]," 并不是太了解，可以选择关闭 ",["code","css-modules"],"，只需要在 ",["code",".umirc.js"]," 文件里增加 ",["code","disableCSSModules: true"],"。"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n<span class="token operator">+</span> disableCSSModules<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'umi-plugin-react\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        antd<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>'},["code","export default {\n+ disableCSSModules: true,\n  plugins: [\n    [\n      'umi-plugin-react', {\n        antd: true,\n      }\n    ],\n  ]\n}"]],["h2","完成"],["p","完成以上步骤之后，我们再启动 ",["code","umi dev"]," 即可查看在 landing 上下载的模板。"],["div",{style:"width: 100%; height: 1px; background: rgb(233, 233, 233);"}],["h2","额外内容"],["p","如果是单个页面的不必要往下看。"],["h3","多页面路由"],["p",["strong","带 router 的 demo 地址 ",["a",{title:null,href:"https://github.com/ant-motion/landing-umi-example/tree/router"},"umi-example#router"],";"]],["p","此块功能不是必要，如果有多个静态页面的情况下，我们可以在 umi 的 src 下新建 ",["code","layouts/index.js"]," 文件，具体可以查看 ",["a",{title:null,href:"https://umijs.org/guide/router.html#global-layout"},"umiJS Global Layout"]],["pre",{lang:"diff",highlighted:'│── src\n│ │── Home \n│    │── less\n│    │── index.js\n│    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less\n<span class="token inserted">+ └── layouts           </span>\n<span class="token inserted">+    │── index.js       </span>'},["code","│── src\n│ │── Home \n│    │── less\n│    │── index.js\n│    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less\n+ └── layouts           \n+    │── index.js       "]],["h4","先转移 Nav 和 Footer"],["p","将 ",["code","Home"]," 里的 ",["code","Header"]," 和 ",["code","Footer"]," 提取放到 ",["code","layouts/index.js"]," 里即可。然后再将 ",["code","Home/index.js"]," 里跟 ",["code","Header"]," 和 ",["code","Footer"]," 相关的内容全部删除, 再将 ",["code","data.source.js"]," 里跟 ",["code","Header"]," 和 ",["code","Footer"]," 相关的内容全部剪切到 ",["code","layouts/data.source.js"]," 里。"],["blockquote",["p",["strong","注：文件转移后，请注意修改 import 相关的内容。"]]],["p","Home/index.js 更改参考 ",["a",{title:null,href:"https://github.com/ant-motion/landing-umi-example/blob/router/src/Home/index.jsx"},"index.jsx"]],["pre",{lang:"diff",highlighted:'│── src\n│ │── Home \n│    │── less\n<span class="token deleted">-    │    │── nav0.less  </span>\n<span class="token deleted">-    │    │── footer0.less  </span>\n*    │── index.js\n<span class="token deleted">-    │── Nav0.jsx  </span>\n<span class="token deleted">-    │── Footer0.jsx  </span>\n*    │── data.source.js\n│    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less\n│    │── page2.js\n│ └── layouts           \n│    │── index.js  \n<span class="token inserted">+    │── Nav0.jsx  </span>\n<span class="token inserted">+    │── nav0.less  </span>\n<span class="token inserted">+    │── Footer0.jsx  </span>\n<span class="token inserted">+    │── footer0.less  </span>\n<span class="token inserted">+    │── data.source.js</span>'},["code","│── src\n│ │── Home \n│    │── less\n-    │    │── nav0.less  \n-    │    │── footer0.less  \n*    │── index.js\n-    │── Nav0.jsx  \n-    │── Footer0.jsx  \n*    │── data.source.js\n│    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less\n│    │── page2.js\n│ └── layouts           \n│    │── index.js  \n+    │── Nav0.jsx  \n+    │── nav0.less  \n+    │── Footer0.jsx  \n+    │── footer0.less  \n+    │── data.source.js"]],["h4","再引入 nav0.less 和 footer0.less"],["p","如果 ",["code","less"]," 引入是 ",["a",{title:null,href:"#在全局样式里引用"},"在全局样式里引用"]," 时，我们需要将 ",["code","nav0.less"]," 和 ",["code","footer0.less"]," 以同样的方法引入;"],["h4","再添加 ",["code","layouts/index.js"]," 内容"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> enquireScreen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'enquire-js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">\'./Nav0\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">\'./Footer0\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Nav00DataSource<span class="token punctuation">,</span>\n  Footer00DataSource<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./data.source.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Layout</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      isMobile<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// 适配手机屏幕;</span>\n    <span class="token function">enquireScreen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isMobile<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>b <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>Nav00DataSource<span class="token punctuation">}</span></span> <span class="token attr-name">isMobile</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isMobile<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>Footer00DataSource<span class="token punctuation">}</span></span> <span class="token attr-name">isMobile</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isMobile<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Layout<span class="token punctuation">;</span>'},["code","import React, { Component } from 'react';\nimport { enquireScreen } from 'enquire-js';\nimport Header from './Nav0';\nimport Footer from './Footer0';\n\nimport {\n  Nav00DataSource,\n  Footer00DataSource,\n} from './data.source.js';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile,\n    };\n  }\n\n  componentDidMount() {\n    // 适配手机屏幕;\n    enquireScreen((b) => {\n      this.setState({ isMobile: !!b });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Header dataSource={Nav00DataSource} isMobile={this.state.isMobile} />\n        {this.props.children}\n        <Footer dataSource={Footer00DataSource} isMobile={this.state.isMobile} />\n      </>\n    );\n  }\n}\n\nexport default Layout;"]],["h3","添加页面"],["p","将 ",["code","Landing"]," 上下载的另一个页面换个名称，如 ",["code","Page2"],", 拷贝到 ",["code","src"]," 文件包里, 注: 不需要 ",["code","Nav"]," 和 ",["code","Footer"],"，然后在 ",["code","pages"]," 里添加 ",["code","page2.js"],"。"],["pre",{lang:"diff",highlighted:'│── src\n│ │── Home \n│    │── less\n│    │── index.js\n│    └── ...\n<span class="token inserted">+ │── Page2 </span>\n<span class="token inserted">+    │── less</span>\n<span class="token inserted">+    │── index.js</span>\n<span class="token inserted">+    └── ...</span>\n│ └── pages     \n│    │── index.js\n│    │── index.less\n<span class="token inserted">+    │── page2.js</span>\n│ └── layouts           \n│    │── index.js       '},["code","│── src\n│ │── Home \n│    │── less\n│    │── index.js\n│    └── ...\n+ │── Page2 \n+    │── less\n+    │── index.js\n+    └── ...\n│ └── pages     \n│    │── index.js\n│    │── index.less\n+    │── page2.js\n│ └── layouts           \n│    │── index.js       "]],["h4","page2.js"],["p","添加文件指向"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> Page2 <span class="token keyword">from</span> <span class="token string">\'../Page2\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Page2</span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","import Page2 from '../Page2';\n\nexport default function () {\n  return (\n    <Page2 />\n  );\n}"]],["h4","修改 Nav0 相关参数"],["p","先修改 ",["code","layouts"]," 里的 ",["code","Nav0"]," 文件的标签"],["h5","./src/layouts/Nav0"],["pre",{lang:"diff",highlighted:'import React from \'react\';\n...\nimport { Menu } from \'antd\';\n<span class="token inserted">+import NavLink from \'umi/navlink\';</span>\n\nconst Item = Menu.Item;\n\nclass Header extends React.Component {\n  ....\n    const navChildren = Object.keys(navData).map((key, i) => (\n      &lt;Item key={i.toString()} {...navData[key]}>\n<span class="token deleted">-       &lt;a</span>\n<span class="token inserted">+       &lt;NavLink</span>\n          {...navData[key].a}\n<span class="token inserted">+         href={navData[key].a.href}</span>\n<span class="token inserted">+         to={navData[key].a.href}</span>\n          target={navData[key].a.target}\n        >\n          {navData[key].a.children}\n<span class="token deleted">-       &lt;/a></span>\n<span class="token inserted">+       &lt;/NavLink></span>\n      &lt;/Item>\n  ...\n}\n\nexport default Header;'},["code","import React from 'react';\n...\nimport { Menu } from 'antd';\n+import NavLink from 'umi/navlink';\n\nconst Item = Menu.Item;\n\nclass Header extends React.Component {\n  ....\n    const navChildren = Object.keys(navData).map((key, i) => (\n      <Item key={i.toString()} {...navData[key]}>\n-       <a\n+       <NavLink\n          {...navData[key].a}\n+         href={navData[key].a.href}\n+         to={navData[key].a.href}\n          target={navData[key].a.target}\n        >\n          {navData[key].a.children}\n-       </a>\n+       </NavLink>\n      </Item>\n  ...\n}\n\nexport default Header;"]],["p","再修改 ",["code","layouts/data.source.js"]," 里的 ",["code","href"]," 值;"],["pre",{lang:"diff",highlighted:"export const Nav00DataSource = {\n  ...\n  Menu: {\n    className: 'header0-menu',\n    children: [\n<span class=\"token deleted\">-     { name: 'item0', a: { children: '导航一', href: '' } },</span>\n<span class=\"token inserted\">+     { name: 'item0', a: { children: '导航一', href: '/' } },</span>\n<span class=\"token deleted\">-     { name: 'item1', a: { children: '导航二', href: '' } },</span>\n<span class=\"token inserted\">+     { name: 'item1', a: { children: '导航二', href: '/page2' } },</span>\n      { name: 'item2', a: { children: '导航三', href: '' } },\n      { name: 'item3', a: { children: '导航四', href: '' } },\n    ],\n  },\n  ...\n};"},["code","export const Nav00DataSource = {\n  ...\n  Menu: {\n    className: 'header0-menu',\n    children: [\n-     { name: 'item0', a: { children: '导航一', href: '' } },\n+     { name: 'item0', a: { children: '导航一', href: '/' } },\n-     { name: 'item1', a: { children: '导航二', href: '' } },\n+     { name: 'item1', a: { children: '导航二', href: '/page2' } },\n      { name: 'item2', a: { children: '导航三', href: '' } },\n      { name: 'item3', a: { children: '导航四', href: '' } },\n    ],\n  },\n  ...\n};"]],["h3","Router 完成"],["p","完成以上步骤之后，我们再启动 ",["code","umi dev"]," 即可查看在 landing 上下载的模板, 通过导航切换的可查看多个页面了。"]],meta:{order:2,category:{"zh-CN":"使用教程","en-US":"Tutorial"},title:{"zh-CN":"umi 里使用","en-US":"Use in umi"},filename:"docs/use/umi.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#文件路径",title:"文件路径"},"文件路径"]],["li",["a",{className:"bisheng-toc-h2",href:"#安装依赖",title:"安装依赖"},"安装依赖"]],["li",["a",{className:"bisheng-toc-h2",href:"#修改入口文件",title:"修改入口文件"},"修改入口文件"]],["li",["a",{className:"bisheng-toc-h2",href:"#CSS-Modules",title:"CSS Modules"},"CSS Modules"]],["li",["a",{className:"bisheng-toc-h2",href:"#完成",title:"完成"},"完成"]],["li",["a",{className:"bisheng-toc-h2",href:"#额外内容",title:"额外内容"},"额外内容"]]]}}}]);